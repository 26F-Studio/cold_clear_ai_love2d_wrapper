name: CI

on:
  push:
    branches: [ master, ci ]
  pull_request:
    branches: [ master, ci ]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Download love
      run: |
        curl -LO https://github.com/love2d/love/releases/download/11.3/love-11.3-win64.zip
        curl -LO https://github.com/love2d/love/releases/download/11.3/love-11.3-win32.zip
        7z x love-11.3-win64.zip
        7z x love-11.3-win32.zip
        copy love-11.3-win64/lua51.dll .
        copy love-11.3-win32/lua51.dll x86
    - name: Setup rust win32
      run: rustup target add i686-pc-windows-msvc
    - name: Setup tdmgcc
      shell: cmd
      run: |
        curl -LO https://github.com/jmeubank/tdm-gcc/releases/download/v9.2.0-tdm64-1/tdm64-gcc-9.2.0.exe
        7z x tdm64-gcc-9.2.0.exe
        move $PLUGINSDIR tdmgcc
        cd tdmgcc
        7z x *.xz
        7z x *.tar -y
    - name: Build coldclear
      run: |
        cd cold-clear/c-api
        cargo build --release
        cargo build --release --target=i686-pc-windows-msvc
        cd ../..
        copy cold-clear/target/release/cold_clear.dll .
        copy cold-clear/target/i686-pc-windows-msvc/release/cold_clear.dll x86
    - name: Build ccloader
      shell: cmd
      run: |
        set PATH=%GITHUB_WORKSPACE%\tdmgcc\bin;%PATH%
        mingw32-make
        mingw32-make x86/CCloader.dll
    - name: Artifact
      uses: actions/upload-artifact@v2
      with:
        name: win64
        path: |
          CCloader.dll
          cold_clear.dll
    - name: Artifact
      uses: actions/upload-artifact@v2
      with:
        name: win32
        path: |
          x86/CCloader.dll
          x86/cold_clear.dll

  build-linux:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup
      run: sudo apt install love
    - name: Build
      run: make CCloader.so
    - name: Strip
      run: strip libcold_clear.so
    - name: Artifact
      uses: actions/upload-artifact@v2
      with:
        name: linux
        path: |
          libcold_clear.so
          CCloader.so

  build-android:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Download NDK
      run: |
        curl -LO https://dl.google.com/android/repository/android-ndk-r21-linux-x86_64.zip
        7z x android-ndk-r21-linux-x86_64.zip
    - name: Download love
      run: |
        curl -LO https://github.com/love2d/love/releases/download/11.3/love-11.3-android.apk
        7z x love-11.3-android.apk -olove-11.3-android
    - name: Setup rust
      run: |
        cargo install cargo-ndk
        rustup target add aarch64-linux-android armv7-linux-androideabi
    - name: Build coldclear
      run: |
        export NDK_HOME="${GITHUB_WORKSPACE}/android-ndk-r21"
        cd cold-clear/c-api
        cargo ndk --platform 21 --target armv7-linux-androideabi build --release
        cargo ndk --platform 21 --target aarch64-linux-android build --release
    - name: Build ccloader
      run: |
        export PATH="${GITHUB_WORKSPACE}/android-ndk-r21:$PATH"
        cp cold-clear/target/armv7-linux-androideabi/release/libcold_clear.so ./love-11.3-android/lib/armeabi-v7a
        cp cold-clear/target/aarch64-linux-android/release/libcold_clear.so ./love-11.3-android/lib/arm64-v8a
        ndk-build NDK_PROJECT_PATH=. NDK_APPLICATION_MK=Application.mk APP_BUILD_SCRIPT=Android.mk LOVE2D_LIB=./love-11.3-android/lib
    - name: Strip
      run: |
        strip love-11.3-android/lib/armeabi-v7a/libcold_clear.so
        strip love-11.3-android/lib/arm64-v8a/libcold_clear.so
    - name: Artifact
      uses: actions/upload-artifact@v2
      with:
        name: android_armv7
        path: |
          love-11.3-android/lib/armeabi-v7a/libcold_clear.so
          libs/armeabi-v7a/libCCloader.so
    - name: Artifact
      uses: actions/upload-artifact@v2
      with:
        name: android_aarch64
        path: |
          love-11.3-android/lib/arm64-v8a/libcold_clear.so
          libs/arm64-v8a/libCCloader.so
