name: Build CCloader

on:
  push:
    branches: [main, ci*]
    tags: 
      - '*'

jobs:
  build-android:
    runs-on: ubuntu-latest
    env:
      LOVE_HOME: love
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Download love
        run: |
          curl -LO --retry 5 https://github.com/love2d/love/releases/download/11.4/love-11.4-android.apk
          7z x love-11.4-android.apk -o${{ env.LOVE_HOME }}
      - name: Setup rust
        run: |
          cargo install cargo-ndk
          rustup target add aarch64-linux-android armv7-linux-androideabi
      - name: Build CC loader
        run: |
          export ANDROID_NDK_HOME=/usr/local/lib/android/sdk/ndk
          export PATH="${ANDROID_NDK_HOME}/21.4.7075529:${ANDROID_NDK_HOME}:$PATH"
          make android
      - name: Strip libs
        run: |
          export PATH="/usr/local/lib/android/sdk/ndk/21.4.7075529/toolchains/llvm/prebuilt/linux-x86_64/aarch64-linux-android/bin/:$PATH"
          strip build/armeabi-v7a/libcold_clear.so
          strip build/arm64-v8a/libcold_clear.so
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Android
          path: build
      - name: Pack build folder
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          7z a -tzip Android.zip ./build/*
      - name: Create release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: Android.zip

  build-iOS:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Get Luajit
        shell: bash
        run: |
          curl -LO --retry 5 https://github.com/love2d/love-apple-dependencies/raw/main/iOS/libraries/Lua.xcframework/ios-arm64/libluajit_device.a
          mkdir -p lib/arm64/ && mv libluajit_device.a lib/arm64/libluajit.a
      - name: Setup rust
        run: rustup target add aarch64-apple-ios
      - name: Build CC loader
        run: make build/arm64/libCCloader.a
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: iOS
          path: build
      - name: Pack build folder
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          7z a -tzip iOS.zip ./build/*
      - name: Create release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: iOS.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install love-11.4
        shell: bash
        run: sudo apt install love
      - name: Setup rust targets
        shell: bash
        run: rustup target add x86_64-unknown-linux-gnu
      - name: Build CC loader
        shell: bash
        run: make build/x64/CCloader.so
      - name: Strip libs
        shell: bash
        run: strip build/x64/CCloader.so
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Linux
          path: build
      - name: Pack build folder
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          7z a -tzip Linux.zip ./build/*
      - name: Create release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: Linux.zip

  build-macOS:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Get Luajit
        shell: bash
        run: |
          curl -LO --retry 5 https://github.com/love2d/love-apple-dependencies/raw/main/macOS/Frameworks/Lua.framework/Versions/A/Lua
          mkdir -p lib/universal/ && mv Lua lib/universal/libluajit.a
      - name: Setup rust
        run: |
          rustup target add \
          x86_64-apple-darwin \
          aarch64-apple-darwin
      - name: Build CC loader
        shell: bash
        run: make build/universal/CCloader.dylib
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: macOS
          path: build
      - name: Pack build folder
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          7z a -tzip macOS.zip ./build/*
      - name: Create release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: macOS.zip

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: MinoruSekine/setup-scoop@main
      - name: Install packages
        shell: bash
        run: |
          scoop bucket add versions
          scoop install make tdm-gcc
      - name: Download love
        shell: bash
        run: |
          curl -LO --retry 5 https://github.com/love2d/love/releases/download/11.4/love-11.4-win64.zip
          mkdir -p lib/x64/ && 7z e love-11.4-win64.zip lua51.dll -r -olib/x64/
          curl -LO --retry 5 https://github.com/love2d/love/releases/download/11.4/love-11.4-win32.zip
          mkdir -p lib/x86/ && 7z e love-11.4-win32.zip lua51.dll -r -olib/x86/
      - name: Setup rust targets
        shell: bash
        run: |
          rustup target add \
          x86_64-pc-windows-msvc \
          i686-pc-windows-msvc
      - name: Build CCloader
        shell: bash
        run: |
          ls -l /c/Users/runneradmin/scoop/apps/tdm-gcc/current/bin/
          export PATH="/c/Users/runneradmin/scoop/apps/tdm-gcc/current/bin/:$PATH"
          echo $PATH
          make windows
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Windows
          path: build
      - name: Pack build folder
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          7z a -tzip Windows.zip ./build/*
      - name: Create release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: Windows.zip
